{
  "sf-evolve-component-js": {
    "isFileTemplate": true,
    "scope": "javascript",
    "prefix": "evolve js",
    "body": [
      "import { api, wire } from \"lwc\";",
      "import { getRecord } from \"lightning/uiRecordApi\";",
      "import DynamicFormsElement from \"c/dynamicFormsElement\";",
      "",
      "export default class ${TM_FILENAME_BASE/(.)/${1:/upcase}/} extends DynamicFormsElement {",
      "  @api recordId;",
      "  @api objectApiName;",
      "  @api label;",
      "  @api fieldApiName;",
      "  editMode = false;",
      "",
      "  @wire(getRecord, {",
      "    recordId: \"\\$recordId\",",
      "    fields: [\"\"],",
      "    optionalFields: \"\\$fieldName\"",
      "  })",
      "  thisRecord;",
      "",
      "  get fieldName() {",
      "    return this.objectApiName + \".\" + this.fieldApiName;",
      "  }",
      "",
      "  get currentFieldValue() {",
      "    return this?.thisRecord?.data?.fields[this.fieldApiName]?.value;",
      "  }",
      "",
      "  handleChange(event) {",
      "    this.broadcast(this.EVENT_TYPE.UPDATE, {",
      "      newValue: event.detail.value,",
      "      fieldApiName: this.fieldApiName",
      "    });",
      "  }",
      "",
      "  handleMessage(message) {",
      "    if (message.eventType === this.EVENT_TYPE.EDIT) {",
      "      this.editMode = true;",
      "    } else if (message.eventType === this.EVENT_TYPE.CANCEL) {",
      "      this.editMode = false;",
      "    } else if (message.eventType === this.EVENT_TYPE.SAVE_START) {",
      "      this.showSpinner = true;",
      "    } else if (message.eventType === this.EVENT_TYPE.SAVE_END) {",
      "      this.showSpinner = false;",
      "    }",
      "  }",
      "",
      "  connectedCallback() {",
      "    this.subscribeToMessageChannel();",
      "    this.broadcast(this.EVENT_TYPE.CHECK_EDIT);",
      "  }",
      "}",
    ]
  },
  "sf-evolve-component-html": {
    "isFileTemplate": true,
    "scope": "html",
    "prefix": "evolve html",
    "body": [
      "<template>",
      "  <div class=\"slds-box slds-theme_default\">",
      "    <template lwc:if={editMode}>",
      "      <c-dynamic-forms-field-section",
      "        record-id={recordId}",
      "        object-api-name={objectApiName}",
      "        section-label={label}",
      "        field-api-names={fieldApiName}",
      "        columns=\"${1|1,2|}\"",
      "      >",
      "      </c-dynamic-forms-field-section>",
      "    </template>",
      "    <template lwc:if={editMode}>",
      "      <${2:customComponentName}",
      "        label={label}",
      "        value={currentFieldValue}",
      "        onchange={handleChange}",
      "      ></${2}>",
      "    </template>",
      "  </div>",
      "</template>",
    ]
  },
  "sf-evolve-component-meta": {
    "isFileTemplate": true,
    "scope": "xml",
    "prefix": "evolve xml",
    "body": [
      "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "<LightningComponentBundle xmlns=\"http://soap.sforce.com/2006/04/metadata\">",
      "    <apiVersion>59.0</apiVersion>",
      "    <isExposed>true</isExposed>",
      "    <masterLabel>${1:Component Name}</masterLabel>",
      "    <description>${2:Component description}</description>",
      "    <targets>",
      "        <target>lightning__RecordPage</target>",
      "    </targets>",
      "    <targetConfigs>",
      "        <targetConfig targets=\"lightning__RecordPage\">",
      "            <property name=\"label\" type=\"String\" label=\"Label\" description=\"Enter the API name of the field you would like the slider to be tied to.\"></property>",
      "            <property name=\"fieldApiName\" type=\"String\" label=\"Field API Name\" description=\"Enter the label.\"></property>",
      "        </targetConfig>",
      "  </targetConfigs>",
      "</LightningComponentBundle>",
    ]
  }
}
